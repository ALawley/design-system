@mixin with-remove($component) {
  &.rc-#{$component}-removable {
    position: relative;

    &:hover .remove-corner {
      display: flex;
    }
  }

  .remove-corner {
    background: $reflect-remove-background;
    border-radius: $reflect-circle-radius;
    cursor: pointer;
    display: none;
    float: right;
    height: 21px;
    position: absolute;
    right: 5px;
    top: 5px;
    width: 21px;
    z-index: 24;

    .rc-#{$component}-remove::before {
      align-items: center;
      background: $reflect-remove-background;
      border: 0;
      border-radius: $reflect-circle-radius;
      bottom: 0;
      display: flex;
      justify-content: center;
      left: 0;
      position: absolute;
      right: 0;
      top: -1px;
    }

    &:hover .rc-#{$component}-remove .rc-icon {
      fill: $reflect-danger-color;
    }

    .rc-#{$component}-remove {
      display: block;
      height: 100%;
      line-height: 20px;
      text-align: center;
      width: 100%;
    }
  }
}

@mixin v-center($display: block, $position: relative) {
  display: $display;
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin transition($x...) {
  transition: $x;
}

@mixin icon-opacity-hover($start-opacity: 0.8, $end-opacity: 1, $transition: opacity 0.2s) {
  opacity: $start-opacity;
  transition: $transition;

  &:hover {
    opacity: $end-opacity;
  }
}

@mixin icon-scale-hover($scale: 1.2, $transition: transform 0.2s) {
  transition: $transition;

  &:hover {
    transform: scale($scale);
  }
}

@mixin focus-circle($size: 4px, $color: $reflect-black, $opacity: 0.12) {
  position: relative;

  &::before {
    background-color: $color;
    border-radius: 50%;
    bottom: $size * -1;
    content: '';
    left: $size * -1;
    opacity: 0;
    position: absolute;
    right: $size * -1;
    top: $size * -1;
    transform: scale(0.5);
    transition: opacity 0.2s, transform 0.2s;
  }

  &:focus {
    outline: none;
    outline: solid 2px transparent;
  }

  &:focus::before {
    opacity: $opacity;
    transform: scale(1);
  }
}
