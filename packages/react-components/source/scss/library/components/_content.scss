// These margins are intentionally applied only within <Content /> components.
// The <Text /> and <Heading /> components have zero margins outside of <Content />.
$puppet-type-hero-margin: 32px !default;
$puppet-type-h1-margin: 24px !default;
$puppet-type-h2-margin: 20px !default;
$puppet-type-h3-margin: 16px !default;
$puppet-type-h4-margin: 16px !default;
$puppet-type-h5-margin: 12px !default;
$puppet-type-h6-margin: 12px !default;
$puppet-type-large-margin: 16px !default;
$puppet-type-medium-margin: 12px !default;
$puppet-type-body-margin: 12px !default;
$puppet-type-small-margin: 12px !default;
$puppet-type-tiny-margin: 8px !default;

// These code background styles are only applied within <Content> components.
// <Code> components (and <code> tags) have no background style outside of
// <Content> components.
@mixin puppet-type-code-inline-background() {
  background-color: $puppet-n100;
  border-radius: 2px;
  padding: 0 $puppet-common-spacing-base;
}

.rc-content {
  @include puppet-type-body();

  //
  // Links
  //

  a {
    @include puppet-type-link();
  }

  //
  // Headers
  //
  .rc-heading-hero {
    @include puppet-type-hero();
    margin-bottom: $puppet-type-hero-margin;
    margin-top: $puppet-type-hero-margin * 2;
  }

  h1 {
    @include puppet-type-h1();
    margin-bottom: $puppet-type-h1-margin;
    margin-top: $puppet-type-h1-margin * 2;
  }

  h2 {
    @include puppet-type-h2();
    margin-bottom: $puppet-type-h2-margin;
    margin-top: $puppet-type-h2-margin * 2;
  }

  h3 {
    @include puppet-type-h3();
    margin-bottom: $puppet-type-h3-margin;
    margin-top: $puppet-type-h3-margin * 2;
  }

  h4 {
    @include puppet-type-h4();
    margin-bottom: $puppet-type-h4-margin;
    margin-top: $puppet-type-h4-margin * 2;
  }

  h5 {
    @include puppet-type-h5();
    margin-bottom: $puppet-type-h5-margin;
    margin-top: $puppet-type-h5-margin * 2;
  }

  h6 {
    @include puppet-type-h6();
    margin-bottom: $puppet-type-h6-margin;
    margin-top: $puppet-type-h6-margin * 2;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .rc-text,
  .rc-heading {
    &:first-child {
      margin-top: 0;
    }
  }

  //
  // Paragraphs
  //

  p {
    margin-bottom: $puppet-type-body-margin;
  }

  p,
  .rc-text {
    margin-top: 0;
  }

  .rc-text-size-large {
    margin-bottom: $puppet-type-large-margin;
  }

  .rc-text-size-medium {
    margin-bottom: $puppet-type-medium-margin;
  }

  .rc-text-size-small {
    margin-bottom: $puppet-type-small-margin;
  }

  .rc-text-size-tiny {
    margin-bottom: $puppet-type-tiny-margin;
  }

  //
  // Lists (general)
  //

  ol,
  ul {
    border-collapse: separate;
    border-spacing: 0 $puppet-common-spacing-base * 2;
    list-style: none;
    margin-bottom: $puppet-common-spacing-base * 4;
    margin-top: -$puppet-common-spacing-base * 2;
    padding-left: 0;
  }

  ol {
    counter-reset: item;
  }

  li {
    display: table-row;
  }

  li > p {
    margin-bottom: 0;
  }

  li > ul,
  li > ol {
    margin-bottom: 0;
    margin-top: 0;
  }

  ol li::before,
  ul li::before {
    display: table-cell;
    text-align: left;
    width: $puppet-common-spacing-base * 6;
  }

  // Bullet styles for ordered lists
  ol > li::before {
    color: $puppet-n800;
    content: counter(item) '. ';
    counter-increment: item;
    font-size: $puppet-type-small-font-size;
    font-weight: 600;
    width: $puppet-common-spacing-base * 5;
  }

  // Bullet styles for unordered lists
  ul > li::before {
    color: $puppet-n800;
    content: '\25AA'; // square
    counter-reset: item;
    width: $puppet-common-spacing-base * 5;
  }

  //
  // Nested list styles
  //

  // TODO Create a system whereby an infinite number of ordered and unordered lists have appropriate styling
  // ie. what do the bullets of a third level ordered list look like? [1,2,3] -> [i, ii, iii] -> [?,?,?]

  // Lower case italics for nested ordered lists
  /* stylelint-disable-next-line selector-max-compound-selectors */
  ol li ol > li::before {
    content: counter(item, lower-roman) '. ';
  }

  // Triangles for nested unordered lists
  /* stylelint-disable-next-line selector-max-compound-selectors */
  ul li ul > li::before {
    content: '\25B4'; // triangle
  }

  //
  // Code
  //

  // Plain <code> tags should get the default Code component
  // size, which goes with the default body text size:
  code {
    @include puppet-type-code();
    // All <code> tags also have a background color inside Content components only:
    @include puppet-type-code-inline-background();
  }
  // ...but now we've set those styles for _all_ <code> tags inside Content,
  // including:
  //
  // - <code> tags inside PDS Text components that use non-default sizes, and
  // - PDS Code components that use the <code> tag.
  //
  // Restore the PDS t-shirt sizes in those contexts:
  .rc-text-size-tiny code,
  .rc-code-size-tiny {
    font-size: $puppet-type-code-tiny-font-size;
  }

  .rc-text-size-small code,
  .rc-code-size-small {
    font-size: $puppet-type-code-small-font-size;
  }

  .rc-text-size-medium code,
  .rc-code-size-medium {
    font-size: $puppet-type-code-medium-font-size;
  }

  .rc-text-size-large code,
  .rc-code-size-large {
    font-size: $puppet-type-code-large-font-size;
  }

  // Block-level code and nested Code components with type=block:
  pre,
  .rc-code-block {
    @include puppet-type-code-block();
    margin: $puppet-type-body-margin 0;
  }

  //
  // Blockquotes
  //

  blockquote::before {
    background-color: $puppet-n300;
    border-radius: 2px;
    bottom: 0;
    content: '';
    margin-left: -$puppet-common-spacing-base * 8;
    position: absolute;
    top: 0;
    width: $puppet-common-spacing-base * 2;
  }

  blockquote {
    @include puppet-type-h6(medium);
    margin: $puppet-type-body-margin 0;
    padding: $puppet-common-spacing-base * 4 $puppet-common-spacing-base * 8;
    position: relative;

    p { // Must override these specifically, or we'll get paragraph styles
      @include puppet-type-h6(medium);
      margin: 0;
    }
  }

  //
  // Images
  //

  img {
    background: #fff;
    border: 1px solid $puppet-n300;
    border-radius: $puppet-common-border-radius;
    box-sizing: border-box;
    max-width: 100%;
    padding: 4px;
  }

  //
  // Tables (general)
  //

  table {
    @include puppet-type-small();
    border-spacing: 0;
    display: block;
    margin-bottom: $puppet-common-spacing-base * 6;
    overflow-x: auto;
    width: 100%;

    code {
      @include puppet-type-code-small();
      line-height: inherit;
    }
  }

  td,
  th {
    background-color: $puppet-white;
    border-bottom: 1px solid $puppet-n200;
    border-right: 1px solid $puppet-n200;
    min-width: 150px;
    padding: $puppet-common-spacing-base * 2;
    text-align: left;
    vertical-align: top;
  }

  // Make first column sticky unless narrow screen
  td:first-child,
  th:first-child {
    background-color: $puppet-n50;
    left: 0;
    position: sticky;
  }

  td:first-child,
  th:first-child {
    @include respond-below(medium) {
      position: unset;
    }
  }

  td:first-child > code,
  th:first-child > code {
    background-color: $puppet-n200;
  }

  td > a:only-child,
  th > a:only-child {
    // For links that are the direct and only descendent a cell, fill up the cell
    display: inline-block;
    margin: -$puppet-common-spacing-base * 2;
    padding: $puppet-common-spacing-base * 2;
    width: 100%;

    &:focus {
      box-shadow: none;

      // stylelint-disable-next-line
      .rc-link-children {
        box-shadow: inset 0 -4px 0 -1px $puppet-b100;
      }
    }
  }

  //
  // Table outer border
  //

  tr:first-child th,
  tr:first-child td {
    border-top: 1px solid $puppet-n300;
  }

  /* stylelint-disable-next-line selector-max-compound-selectors */
  thead + tbody tr:first-child td {
    border-top: 0;
  }

  tr:last-child th,
  tr:last-child td {
    border-bottom: 1px solid $puppet-n300;
  }

  th:first-child,
  td:first-child {
    border-left: 1px solid $puppet-n300;
  }

  th:last-child,
  td:last-child {
    border-right: 1px solid $puppet-n300;
  }

  tr:first-child td:first-child,
  tr:first-child th:first-child {
    border-top-left-radius: $puppet-common-border-radius;
  }

  //
  // Table border radius
  //

  tr:first-child td:last-child,
  tr:first-child th:last-child {
    border-top-right-radius: $puppet-common-border-radius;
  }

  /* stylelint-disable-next-line selector-max-compound-selectors */
  thead + tbody tr:first-child td:first-child {
    border-top-left-radius: 0;
  }

  /* stylelint-disable-next-line selector-max-compound-selectors */
  thead + tbody tr:first-child td:last-child {
    border-top-right-radius: 0;
  }

  tr:last-child td:first-child {
    border-bottom-left-radius: $puppet-common-border-radius;
  }

  tr:last-child td:last-child {
    border-bottom-right-radius: $puppet-common-border-radius;
  }
}
